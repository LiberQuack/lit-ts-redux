{"version":3,"sources":["application/models/request.ts","ui/pages/github-page.ts"],"names":[],"mappings":";AAoFC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EApFD,IAAA,EAAA,QAAA,2BAGA,MAAM,UAA6B,EAAnC,aAeI,YAAY,EAAc,GACtB,QAdJ,KAAA,IAAM,GACN,KAAA,SAAU,EACV,KAAA,MAAO,EACP,KAAA,UAAY,EAOZ,KAAA,OAAQ,EAKC,KAAA,IAAM,EACN,KAAA,KAAO,EAAqB,GAGrC,IAAI,GAII,GAFC,KAAA,WAAa,EAEd,KAAK,QAEL,YADA,QAAQ,KAAK,yDAIZ,KAAA,SAAU,EAOf,MAAM,KAAK,IAAK,CAAC,OAAQ,KAAK,KAAK,OAAQ,QAL3B,CACF,OAAA,mBACM,eAAA,sBAIf,KAAK,MAAA,IACE,IACM,MAAA,EAAQ,EAAI,QAAU,KAAO,EAAI,OAAS,IAE3C,KAAA,OAAS,EAAI,OACb,KAAA,MAAQ,EACR,KAAA,gBAAkB,EAAI,QACrB,MAAA,EAAS,OAAO,KAAK,EAAI,QAAQ,IAAI,iBACrC,QAAiB,EAAS,EAAI,OAAS,GAExC,GAKI,KAAA,MAAO,EACP,KAAA,kBAAe,EACf,KAAA,UAAY,IANZ,KAAA,MAAO,EACP,KAAA,aAAe,EACf,KAAA,eAAY,GAMvB,MAAO,GACL,QAAQ,MAAM,GACR,QACD,KAAA,SAAU,KAKrB,6BACC,MAAA,CAAC,UAAW,OAAQ,QAAS,eAAgB,YAAa,SAAU,QASnF,SAAS,EAAqB,GAEnB,MAAA,CACH,OAAQ,SACL,GAEV,QAAA,YAAA;;AC7EK,aAPN,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,mBACA,EAAA,QAAA,oCAKM,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAHN,MAAM,EAAgB,+BAGtB,IAAM,EAAN,cAA0B,EAA1B,YAEI,cACI,QACK,KAAA,UAAU,YAAa,IAAI,EAAJ,aAItB,SACA,MAAA,EAAY,KAAK,UAEhB,OAAA,EAAI;;;;gDAI6B,GAAK,EAAU,OAAS,KAAiB,EAAE,OAAO;qCAC7D,EAAU;;;kCAGb,EAAU;;+DAEmB,IAAM,EAAU;;;;;;6CAMV,IAAxB,EAAU;qCAClB,EAAU;sBACzB,EAAU,cAAgB,EAAI;6CACP,IAAI,KAAK,EAAU,aAAa,YAAY;+CAC1C,EAAU,aAAa;;;;YA/BhE,EAAW,EAAA,EADhB,EAAc,EAAA,eAAA,gBACT","file":"github-page.5ae03d24.js","sourceRoot":"../src","sourcesContent":["import {Subscribable} from \"../../core/subscribable\";\n\n\nclass HttpRequest<T = any> extends Subscribable {\n\n    url = \"\";\n    loading = false;\n    done = false;\n    runCounts = 0;\n\n    opts: HttpRequestOptions;\n    status: number;\n    responseBody: T;\n    responseHeaders: Headers;\n\n    error = false;\n    errorBody: any;\n\n    constructor(url?: string, opts?:HttpRequestOptions) {\n        super();\n        this.url = url;\n        this.opts = toHttpRequestOptions(opts);\n    }\n\n    run(options?: {force: boolean}): void {\n\n        this.runCounts += 1;\n\n        if (this.loading) {\n            console.warn(\"Request ongoing, you can use force if you really need\");\n            return;\n        }\n\n        this.loading = true;\n\n        const headers = {\n            \"accept\": \"application/json\",\n            \"content-type\": \"application/json\"\n        };\n\n        fetch(this.url, {method: this.opts.method, headers})\n            .then(async res => {\n                try {\n                    const error = res.status >= 400 || res.status < 200;\n\n                    this.status = res.status;\n                    this.error = error;\n                    this.responseHeaders = res.headers;\n                    const isJson = /json/.test(res.headers.get(\"content-type\"));\n                    const resBody = await (isJson ? res.json() : res);\n\n                    if (!error) {\n                        this.done = true;\n                        this.responseBody = resBody;\n                        this.errorBody = undefined;\n                    } else {\n                        this.done = false;\n                        this.responseBody = undefined;\n                        this.errorBody = resBody;\n                    }\n                } catch (e) {\n                    console.error(e);\n                } finally {\n                    this.loading = false;\n                }\n            });\n    }\n\n    protected _registerWatchedProperties(): string[] {\n        return [\"loading\", \"done\", \"error\", \"responseBody\", \"errorBody\", \"status\", \"url\"];\n    }\n\n}\n\ntype HttpRequestOptions = {\n    method: \"GET\" | \"PUT\" | \"DELETE\" | \"POST\" | \"PATCH\";\n}\n\nfunction toHttpRequestOptions(options): HttpRequestOptions {\n\n    return {\n        method: \"GET\",\n        ...options\n    }\n}\n\nexport {HttpRequest};\n","import {customElement, html} from \"lit-element\";\nimport {PageElement} from \"../page-element\";\nimport {HttpRequest} from \"../../application/models/request\";\n\nconst USER_URL_PART = \"https://api.github.com/users\";\n\n@customElement(\"page-github\")\nclass RequestPage extends PageElement {\n\n    constructor() {\n        super();\n        this.subscribe(\"ghUserReq\", new HttpRequest());\n    }\n\n    //language=HTML\n    protected render() {\n        const ghUserReq = this.ghUserReq as HttpRequest;\n\n        return html`\n            <section class=\"l-pad-10 l-inline-center\">\n                <div class=\"card\">\n                    <p>Enter your github user name</p>\n                    <input type=\"text\" @blur=\"${e => ghUserReq.url = `${USER_URL_PART}/${e.target.value}`}\">\n                    <div ?hidden=\"${!ghUserReq.url}\">\n                        <p>\n                            <strong>Your github url is:</strong>\n                            <br>${ghUserReq.url}\n                        </p>\n                        <button class=\"form--button\" @click=\"${() => ghUserReq.run()}\">GET USER INFO</button> \n                    </div>\n                </div>\n                \n                <br>\n                \n                <div class=\"card\" ?hidden=\"${ghUserReq.runCounts === 0}\">\n                    <div ?hidden=\"${!ghUserReq.loading}\">Loading...</div>\n                    ${ghUserReq.responseBody && html`\n                        <div>Member since: ${new Date(ghUserReq.responseBody.created_at).getFullYear()}</div>                    \n                        <div>Projects Count: ${ghUserReq.responseBody.public_repos}</div>                    \n                    `}\n                </div>\n            </section>\n        `;\n    }\n}\n"]}
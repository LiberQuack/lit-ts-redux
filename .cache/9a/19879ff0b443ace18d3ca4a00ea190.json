{"id":"../node_modules/@polymer/polymer/lib/utils/boot.js","dependencies":[{"name":"/projects/lit-ts-redux/package.json","includedInParent":true,"mtime":1562036556614},{"name":"/projects/lit-ts-redux/node_modules/@polymer/polymer/package.json","includedInParent":true,"mtime":1562035265446}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {string} prop Property name\n * @param {?Object} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function (prop, obj) {\n  return prop;\n};\n/* eslint-enable */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":12,"column":0}},{"name":"window","generated":{"line":27,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":6},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":6}},{"name":"JSCompiler_renameProperty","generated":{"line":27,"column":7},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":7}},{"generated":{"line":27,"column":32},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":35},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":35}},{"name":"prop","generated":{"line":27,"column":45},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":44}},{"generated":{"line":27,"column":49},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":35}},{"name":"obj","generated":{"line":27,"column":51},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":50}},{"generated":{"line":27,"column":54},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":35}},{"generated":{"line":27,"column":56},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":55}},{"generated":{"line":28,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":21,"column":2}},{"name":"prop","generated":{"line":28,"column":9},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":21,"column":9}},{"generated":{"line":28,"column":13},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":21,"column":2}},{"generated":{"line":29,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":22,"column":1}},{"generated":{"line":29,"column":1},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/@polymer/polymer/lib/utils/boot.js","original":{"line":23,"column":0}}],"sources":{"../node_modules/@polymer/polymer/lib/utils/boot.js":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {string} prop Property name\n * @param {?Object} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n"},"lineCount":null}},"error":null,"hash":"5321106ce50635118caf458f0747bd76","cacheData":{"env":{}}}